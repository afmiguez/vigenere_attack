A ideia central do ataque à cifra de vigenere é tentar convertê-la num conjunto de cifras de césar desfasadas pela posição dos caracteres da chave. Assim uma cifra de vigenere cuja chave tem tamanho n, contém n cifras de césar.
O modo como o trabalho tentou realizar este ataque consistiu nas seguintes etapas:
	a) descobrir repetições de n-gramas, i.e., repetições de conjuntos de n caracteres;
	b) calcular as distâncias entre todas as repetições dos n-gramas;
	c) fatorizar todas estas distâncias e guardar num dicionário de frequencias destes fatores;
	d) considerando que os fatores mais frequentes são mais provaveis de serem o tamanho da chave, decompor a cifra em um número de substrings igual ao tamanho da chave;
	e) analisar a frequência dos caracteres em cada substring e, tendo em conta o idioma da mensagem original, inferir que o caracter mais frequente da cifra é, também, o caracter mais frequente daquele idioma, assim, pode-se, com grande probabilidade de acerto, aplicar ao caracter da cifra o mesmo deslocamento que deveria ser aplicado ao caracter mais frequente deste idioma para tornar-se um 'a';
	f) decifrar as substrings usando as correspondentes possíveis chaves;

O programa em python vigenere_attack.py implementa esta abordagem e aceita como parâmetro uma cifra de vigenere (por defeito, i.e., sem qualquer argumento, ataca a cifra proposta no trabalho) e, interativamente, realiza todas as etapass citadas acima.

Os demais ficheiros oferecem funções acessórias ao programa principal, especialmente decifrar uma cifra com uma chave (decrypt.py) e manipulações da matriz de vigenere (vigenere_matrix.py). O ficheiro encrypt.py não é uma dependência do programa base, mas pode ser utilizado para fins de testes.